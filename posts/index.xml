<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" 
  xmlns:content="http://purl.org/rss/1.0/modules/content/" 
  xmlns:dc="http://purl.org/dc/elements/1.1/" 
  xmlns:atom="http://www.w3.org/2005/Atom" 
  xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" 
  xmlns:media="http://search.yahoo.com/mrss/">
  <channel>
    <title>Posts on zz1gg&#39;s Blog</title>
    <link>https://zz1gg.github.io/posts/</link>
    <description>Recent content in Posts on zz1gg&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <copyright>©2024, All Rights Reserved</copyright>
    <lastBuildDate>Sat, 13 Jul 2024 14:00:06 +0900</lastBuildDate>
    
        <atom:link href="https://zz1gg.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    

      
      <item>
        <title>LLM提示词注入</title>
        <link>https://zz1gg.github.io/posts/llm-prompt-injection/</link>
        <pubDate>Sat, 13 Jul 2024 14:00:06 +0900</pubDate>
        
        <atom:modified>Sat, 13 Jul 2024 14:00:06 +0900</atom:modified>
        <guid>https://zz1gg.github.io/posts/llm-prompt-injection/</guid>
        <description>&lt;p&gt;大模型的强大能力使其在生成内容、提供建议等方面展现出巨大的潜力，但同时也引发了诸多安全挑战，如提示词注入(Prompt Injection)、敏感信息泄露。本文主要涉及LLM攻防的一些内容,如 AI Prompt Injection ， CTF/Game writeup(Gandalf, Immersive Labs, doublespeak)&amp;hellip;&lt;/p&gt;</description>
        
        <dc:creator>zz1gg</dc:creator>
        <media:content url="https://zz1gg.github.ioimages/posts/AI/prompt-injection-game-writeup/10.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>AI</category>
            
          
            
              <category>Prompt</category>
            
          
            
              <category>LLM</category>
            
          
            
              <category>CTF</category>
            
          
            
              <category>Injection</category>
            
          
        
        
          
            
              <category>AI</category>
            
          
        
        
          
            
              <category>AI</category>
            
          
        
      </item>
      
      <item>
        <title>滥用Beep函数规避检测</title>
        <link>https://zz1gg.github.io/posts/beep-function/</link>
        <pubDate>Fri, 17 May 2024 23:59:06 +0900</pubDate>
        
        <atom:modified>Fri, 17 May 2024 23:59:06 +0900</atom:modified>
        <guid>https://zz1gg.github.io/posts/beep-function/</guid>
        <description>&lt;p&gt;编写&lt;code&gt;Beep&lt;/code&gt;函数的POC代码和frida脚本（模拟检测沙箱），模拟Beep规避沙箱的检测机制。&lt;/p&gt;</description>
        
        <dc:creator>zz1gg</dc:creator>
        <media:content url="https://zz1gg.github.ioimages/posts/beep_function/beep_function_win32.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>Windows</category>
            
          
            
              <category>beep</category>
            
          
            
              <category>frida</category>
            
          
            
              <category>anti-sandbox</category>
            
          
            
              <category>Golang</category>
            
          
            
              <category>Hook</category>
            
          
        
        
          
            
              <category>Windows</category>
            
          
        
        
          
            
              <category>WinAPI</category>
            
          
        
      </item>
      
      <item>
        <title>Process Hollowing</title>
        <link>https://zz1gg.github.io/posts/processhollowing/</link>
        <pubDate>Wed, 24 Jan 2024 23:02:31 +0900</pubDate>
        
        <atom:modified>Wed, 24 Jan 2024 23:02:31 +0900</atom:modified>
        <guid>https://zz1gg.github.io/posts/processhollowing/</guid>
        <description>&lt;p&gt;关于目标进程调试与分析、Shellcode注入到目标进程的 Process Hollowing的实现思路，以及Process Hollowing（Shellcode）攻击延展的攻击检测防御思路。&lt;/p&gt;</description>
        
        <dc:creator>zz1gg</dc:creator>
        <media:content url="https://zz1gg.github.ioimages/posts/Process_Hollowing/processhollowing_shellcode/Process_Injection.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>Windows</category>
            
          
            
              <category>ProcessHollowing</category>
            
          
            
              <category>shellcode</category>
            
          
            
              <category>Golang</category>
            
          
            
              <category>windbg</category>
            
          
            
              <category>Injection</category>
            
          
        
        
          
            
              <category>Windows</category>
            
          
        
        
          
            
              <category>Bin</category>
            
          
            
              <category>Golang</category>
            
          
        
      </item>
      
      <item>
        <title>Golang杂记</title>
        <link>https://zz1gg.github.io/posts/talk-about-golang-informally/</link>
        <pubDate>Sun, 12 Dec 2021 12:00:06 +0900</pubDate>
        
        <atom:modified>Sun, 12 Dec 2021 12:00:06 +0900</atom:modified>
        <guid>https://zz1gg.github.io/posts/talk-about-golang-informally/</guid>
        <description>&lt;p&gt;本文主要整理、记录了笔者在Golang的学习、使用过程中碰到的一些有意思的方面，内容包括但不限于编译生成、程序的元数据、代码函数、汇编、堆栈、安全。&lt;/p&gt;</description>
        
        <dc:creator>zz1gg</dc:creator>
        <media:content url="https://zz1gg.github.ioimages/posts/talk_about_golang/logo.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>Golang</category>
            
          
            
              <category>go</category>
            
          
            
              <category>sec</category>
            
          
            
              <category>IDA</category>
            
          
            
              <category>reverse</category>
            
          
        
        
          
            
              <category>Golang</category>
            
          
        
        
          
            
              <category>Golang</category>
            
          
        
      </item>
      
      <item>
        <title>AAB转换APK</title>
        <link>https://zz1gg.github.io/posts/aabtoapk/</link>
        <pubDate>Tue, 20 Jul 2021 12:00:06 +0900</pubDate>
        
        <atom:modified>Tue, 20 Jul 2021 12:00:06 +0900</atom:modified>
        <guid>https://zz1gg.github.io/posts/aabtoapk/</guid>
        <description>&lt;p&gt;aab文件转换为apk文件&lt;/p&gt;</description>
        
        <dc:creator>zz1gg</dc:creator>
        <media:content url="https://zz1gg.github.ioimages/posts/Android/aabtoapk.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>Android</category>
            
          
            
              <category>aab</category>
            
          
            
              <category>apk</category>
            
          
        
        
          
            
              <category>Mobile</category>
            
          
        
        
          
            
              <category>Android</category>
            
          
        
      </item>
      

    
  </channel>
</rss>
